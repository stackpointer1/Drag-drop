import './App.css';
import AddTask from "./components/addTask/AddTask";
import {createContext, useContext, useState} from "react";
import TodoList from "./components/todoList/TodoList";
import ErrorMsg from "./components/error/ErrorMsg";

const TodoContext = createContext();
export const useTodo = () => useContext(TodoContext)

function App() {
    const [tasks, setTasks] = useState([]);
    const [inputVal, setInputVal] = useState('');
    const [error, setError] = useState(false);


    /**
     * Handles the change event for an input element and updates the corresponding state.
     *
     * @param {object} e - The event object generated by the input change event.
     */
    function handleChange(e) {
        setInputVal(e.target.value);
    }

    /**
     * Adds a new task to the task list with the provided input value.
     * The task must have a title longer than 3 characters and must not be empty.
     * If the input value is valid, the new task is added to the state with a predefined status, unique ID, and creation date.
     *
     * @param {string} inputVal - The title of the task to be added. Must be a non-empty string with at least 4 characters.
     */
    function addTask(inputVal) {

        if (inputVal.length < 4) {
            setError(true);
            return;
        }

        if (inputVal.trim() === "" ) return;

        setTasks((prevState) => [
            ...prevState,
            {
                title: inputVal,
                status: 'todo',
                id: Date.now(),
                date: new Date().toISOString()
            }
        ])

        setInputVal('');
    }

    function updateTask(task) {
        setTasks(task);
    }

    const contextValue = {
        addTask: addTask,
        tasks,
        handleChange,
        inputVal,
        updateTask
    }
    return (
        <div className="App">
            <TodoContext.Provider value={contextValue}>
                <AddTask/>
                <TodoList/>
            </TodoContext.Provider>
            {error && <ErrorMsg message={error}/>}
        </div>
    );
}

export default App;
